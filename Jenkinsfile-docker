def connectToServer(String ipAddress) {
    script {
        withCredentials([sshUserPrivateKey(credentialsId: 'aws-key-ssh', keyFileVariable: 'KEY_FILE')]) {
            sshagent(['aws-key-ssh']) {
                sh """ 
                ssh -o StrictHostKeyChecking=no -i $KEY_FILE ec2-user@$ipAddress '
                sudo yum install docker -y
                sudo systemctl restart docker
                sudo docker rmi -f roylatin/devops-crypto:latest
                sudo docker run -d -p 5000:5000 roylatin/devops-crypto
                '
                """
            }
        }
    }
}

pipeline {
    agent any
    
     environment {
        EC2_IP_TEST = "54.89.60.242"
        EC2_IP_PROD = "18.208.177.141"
    }

    stages {
        stage('Clean Up') {
            steps {
                // Clean Up Project Files And Clone Git - To Update The Project
                sh 'rm -rf *'
                sh 'git clone https://github.com/Roy-Latin/DevOps-Crypto.git'
                //Deletes Previous Docker Images
                sh 'docker rmi -f  roylatin/devops-crypto:latest'
            }
        }

        stage('Build And Push The Image To Docker Hub') {
            steps {
                //Creates Docker Image
                dir('DevOps-Crypto'){
                sh 'docker build -t roylatin/devops-crypto .'
                }
                //Pushes Docker Image To Docker Hub
                sh 'docker push roylatin/devops-crypto'
            }
        }

        stage('Running Docker On Test Server') {
            steps {
                connectToServer(EC2_IP_TEST)
                // Runs tests from the main machine on the website
                sh 'chmod +x DevOps-Crypto/tests.sh'
                sh './DevOps-Crypto/tests.sh'
            }
        }

        stage('Running Docker On Prod Server') {
            steps {
                connectToServer(EC2_IP_PROD)
            }
        }
    }
}